% ========== Clear All ==========clear ; close all; clc% ========== Read Data ==========rawData = csvread('OnlineNewsPopularity.csv');%rawData = csvread('OnlineNewsPopularity2.csv');% ========== Data Size ==========m = size(rawData, 1);n = size(rawData, 2);% ========== Divide Data ==========trainData = rawData(2:31717, 2:n - 1);validationData = rawData(31718:35681, 2:n - 1);testData = rawData(35682:m, 2:n - 1);% ========== Add Feature 0 ==========trainData = [ones(31716, 1) trainData];validationData = [ones(3964, 1) validationData];testData = [ones(3964, 1) testData];% ========== Divide Y ==========trainY = rawData(2:31717, n);validationY = rawData(31718:35681, n);testY = rawData(35682:m , n);% ========== Read Summary ==========summaryStat = csvread('SummaryStatistics.csv');useStat = summaryStat(2:size(summaryStat, 1), 2:size(summaryStat, 2));% ========== Set Theta ==========theta = ones(60, 1);% ========== Set Learning Rate ==========alpha1 = 0.000000000001;alpha2 = 0.0000000000003;alpha3 = 0.0000000000001;alpha4 = 0.00000000000003;alpha5 = 0.00000000000001;alpha6 = 0.000000000000003;num_iters = 100;[theta1, J_history1] = gradientDescentMulti(trainData, trainY, theta, alpha1, num_iters);[theta2, J_history2] = gradientDescentMulti(trainData, trainY, theta, alpha2, num_iters);[theta3, J_history3] = gradientDescentMulti(trainData, trainY, theta, alpha3, num_iters);[theta4, J_history4] = gradientDescentMulti(trainData, trainY, theta, alpha4, num_iters);[theta5, J_history5] = gradientDescentMulti(trainData, trainY, theta, alpha5, num_iters);[theta6, J_history6] = gradientDescentMulti(trainData, trainY, theta, alpha6, num_iters);figure;plot(1:100, J_history1(1:100), '-b', 'LineWidth', 2);hold on;plot(1:100, J_history2(1:100), '-m', 'LineWidth', 2);plot(1:100, J_history3(1:100), '-r', 'LineWidth', 2);plot(1:100, J_history4(1:100), '-k', 'LineWidth', 2);plot(1:100, J_history5(1:100), '-y', 'LineWidth', 2);plot(1:100, J_history6(1:100), '-g', 'LineWidth', 2);%res = [mean(abs(validationData*theta1 - validationY));%mean(abs(validationData*theta2 - validationY));%mean(abs(validationData*theta3 - validationY));%mean(abs(validationData*theta4 - validationY));%mean(abs(validationData*theta5 - validationY));%mean(abs(validationData*theta6 - validationY));]res = [mean(abs(testData*theta1 - testY));mean(abs(testData*theta2 - testY));mean(abs(testData*theta3 - testY));mean(abs(testData*theta4 - testY));mean(abs(testData*theta5 - testY));mean(abs(testData*theta6 - testY));]% 1. 피처스케일링 여부에 따른 오차% 2. 러닝레이트 값에 따른 변화