% ========== Clear All ==========clear ; close all; clc% ========== Read Data ==========rawData = csvread('EPLstat.csv');% ========== Set Value ==========m = size(rawData, 1);n = size(rawData, 2);season = 2016;teamSize = 20;% ========== Team Name ==========name = ['CHE'; 'TOT'; 'MCI'; 'LIV'; 'ARS'; 'MUN'; 'EVE'; 'SOU'; 'BOU'; 'WBA'; 'WHU'; 'LEI'; 'STK'; 'CRY'; 'SWA'; 'BUR'; 'WAT'; 'HUL'; 'MID'; 'SUN'];% ========== Get Season Stat ==========seasonData = rawData(3:m, 1);seasonFeature = (season - seasonData).^2 + 1;for i = 1:20    % ========== Get X ==========    %X = rawData(3:m, (3*i -1):(3*i));    X = [];    X = [seasonFeature X];        % ========== Feature Scaling ==========    [X_norm, mu, sigma]= featureNormalize(X);    X_norm = [ones(length(seasonData), 1) X_norm];        % ========== Get y ==========    y = rawData(3:m, (3*i + 1));    % ========== Set Theta ==========    theta = ones(size(X_norm, 2), 1);    % ========== Set Learning Rate ==========    alpha = 0.04;        % ========== Gradient Descent ==========    num_iters = 100;    [theta, J_history] = gradientDescentMulti(X_norm, y, theta, alpha, num_iters);    % ========== Predict Current Season Point ==========    rank = [1 ((1 - mu)./sigma)] * theta;        % ========== Print ==========    fprintf('[%s, %f]\n', name(i, :), rank);        end